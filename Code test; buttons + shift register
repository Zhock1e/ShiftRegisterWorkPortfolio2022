const int DataPin = 4; // SER Pin
const int ClockPin = 5; // RCLK9 Pin
const int LatchPin = 6; // SRCLK Pin

const int ButtonZero = 12; //Frnech Numbers add to the fun, I solely just       ✨✨ w a n t e d    t o ✨✨ 
const int ButtonUn = 11; //I started with Zero instead of un to align with the LEDs. The first LED to the left is on Q0, second from the left on Q1 etc. I wanted the button variables names to have some sense of connection.
const int ButtonDeux = 10;
const int ButtonTrois = 9;
const int ButtonQuatre = 8;
const int ButtonCinq = 7;
const int ButtonSix = 6;
const int ButtonSept = 5;



void setup() {
Serial.begin(9600);
pinMode(DataPin, OUTPUT);
pinMode(ClockPin, OUTPUT);
pinMode(LatchPin, OUTPUT);

pinMode(ButtonZero, INPUT_PULLUP); // Changed the code from e.g "pinMode(ButtonZero, INPUT)" to "pinMode(ButtonZero, INPUT_PULLUP)". This decreases code I need to write, instead of button == high light up corresponding LED INPUT_PULLUP does this function for me with less code
pinMode(ButtonUn, INPUT_PULLUP);
pinMode(ButtonDeux, INPUT_PULLUP);
pinMode(ButtonTrois, INPUT_PULLUP);
pinMode(ButtonQuatre, INPUT_PULLUP);
pinMode(ButtonCinq, INPUT_PULLUP);
pinMode(ButtonSix, INPUT_PULLUP);
pinMode(ButtonSept, INPUT_PULLUP);


 digitalWrite(ClockPin, LOW);
 shiftOut(DataPin,LatchPin,MSBFIRST,B10101010); // To check all LEDs replace B1... with '255'.
 digitalWrite(ClockPin, HIGH);


void loop() {
int sensorValue = digitalRead(ButtonZero) //Reading buttons value into a variable
Serial.println(sensorValue); //print the recorded value
// "INPUT_PULLUP" inverts the buttons logic. HIGH when open (LED on), LOW when pressed (LED off).
if (sensorValue == HIGH); {
digitalWrite(13, LOW);
} else {
digitalWrite(13, HIGH);
}

}
